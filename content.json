{"meta":{"title":"LKJ Hexo Blog","subtitle":"wow Blog","description":"Blog","author":"LKJ","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"What is Numpy","slug":"python/numpy/01_what_is_numpy","date":"2017-11-16T12:00:30.500Z","updated":"2017-11-16T12:15:45.588Z","comments":true,"path":"2017/11/16/python/numpy/01_what_is_numpy/","link":"","permalink":"http://yoursite.com/2017/11/16/python/numpy/01_what_is_numpy/","excerpt":"","text":"What is Numpy Numpy是Python科学计算的基本包，提供对于多维数组（矩阵）等各种计算，比如c = a * b，a、b均为矩阵，可以对其进行直接计算，不用使用循环遍历。本机测试计算速度为for循环遍历计算的500+倍。例子如下：目前找不到源网页，直接粘上例子。 123456789101112131415161718import numpy as np import time#from timeit import timeita = np.random.rand(1000000)b = np.random.rand(1000000)time_s = time.time()c = np.dot(a, b)time_e = time.time()print(c, 1000*(time_e - time_s))c = 0time_s = time.time()for i in range(len(a)): c += a[i] * b[i]time_e = time.time()print(c, 1000*(time_e - time_s)) 下图所示 矢量化(Vectorization) 上面的例子是矢量化的例子（Vectorization），包含以下优点： 代码更简洁 更少的代码通常意味着更少的错误 代码运行更接近标准的数学符号，封装了具体的困难的运算，如上np.dot(a, b)直接计算两个矩阵的积。 矢量化导致更多的“Pythonic”(网络解释为很Python的Python代码)代码。如果没有向量化，我们的代码将会效率很低，难以读取for循环。 广播(Broadcasting) 广播是用于描述操作的隐式逐个元素行为的术语大概意思就是比如做矩阵的运算，a为一维矩阵，b为标量，如果做计算a + b，会自动的将a的元素都加上b（我的简单理解） 源网站 Numpy 中文 API","categories":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/categories/Python/"}],"tags":[{"name":"Learn Numpy","slug":"Learn-Numpy","permalink":"http://yoursite.com/tags/Learn-Numpy/"}]},{"title":"使用 git rm --cached filename 删除提交的文件","slug":"git/git_rm_use_cached","date":"2017-11-05T12:26:57.178Z","updated":"2017-11-05T12:27:20.847Z","comments":true,"path":"2017/11/05/git/git_rm_use_cached/","link":"","permalink":"http://yoursite.com/2017/11/05/git/git_rm_use_cached/","excerpt":"","text":"目的为了测试Markdown书写 本人在学习 git 的时候，前期将本地的日志文件提交到仓库，然后也就查找了相关的操作方法，最终使用此命令解决的，然后新增.gitignore文件，提交，再次使用git status这些文件就不会再次出现了，其他情况也可以使用这个方法：将数据库账号密码配置文件从远端仓库删除。 git rmgit rm Filename or Foldername： 使用在当我们提交了一个不想提交的文件，可以使用其删除本地工作目录的文件，一般我们可能需要保留源文件，所以可以使用：--cached参数来实现只删除索引（官方：Index，跟踪的文件清单）。 git rm –cached Filename or Foldername： 使用 --cached 将会保留本地文件，只删除暂存区的文件，提交这次修改，该文件就不会纳入版本管理了，远端的仓库也会同步这个修改，达到删除文件目的。 常用参数： -n or --dry-run 加上这个参数是不会做任何删除操作的，只是将符合filename删除的文件预览打印出来，准确的说加上这个参数会打印此操作产生影响（删除）的文件列表。 git rm -n --cached txt/\\\\*.txt #将会列出txt目录下的符合拓展名字为.txt的文件，反斜杠\\为转义字符。 -f 这个参数是强制执行的意思，如果我们已经将文件提交到暂存区，这个时候需要加上这个参数。 -r 类似bash命令就是递归删除了，如果删除目录使用此参数。 官网相关页面： git-rm","categories":[{"name":"git","slug":"git","permalink":"http://yoursite.com/categories/git/"}],"tags":[{"name":"git rm 删除 文件","slug":"git-rm-删除-文件","permalink":"http://yoursite.com/tags/git-rm-删除-文件/"}]}]}